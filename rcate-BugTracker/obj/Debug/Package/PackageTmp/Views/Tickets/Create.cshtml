@model rcate_BugTracker.Models.CodeFirst.Ticket

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Create Ticket</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <p class="control-label col-md-2">Ticket Title</p>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <p class="control-label col-md-2">Description</p>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <p class="control-label col-md-2">Project Name</p>
        <div class="col-md-10">
            @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <p class="control-label col-md-2">Ticket Type</p>
        <div class="col-md-10">
            @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <p class="control-label col-md-2">Ticket Prioirty</p>
        <div class="col-md-10">    
            @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })  
            @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" }) 
        </div>
    </div>

    @*@if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
    {
        <div class="form-group">
            @Html.LabelFor(model => model.TicketStatusId, "TicketStatusId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {

        @Html.HiddenFor(model => model.TicketStatusId)
    }*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create Ticket" class="btn btn-primary" /> 
        </div>
    </div>
</div>
<div>
    @Html.ActionLink("Back to Tickets", "Index", "Tickets")
</div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
